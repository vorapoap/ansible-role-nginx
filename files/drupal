        # Enable compression, this will help if you have for instance advaggâ€Ž module
        # by serving Gzip versions of the files.
        gzip_static on;

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        #location ~* (\.map|\.map\;)$ {
        #        deny all;
        #}
        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
		alias /web/dev/robots.txt;
        }

        # This matters if you use drush prior to 5.x
        # After 5.x backups are stored outside the Drupal install.
        #location = /backup {
        #        deny all;
        #}

        # Very rarely should these ever be accessed outside of your lan
        #location ~* \.(txt|log)$ {
        #        allow 192.168.0.0/16;
        #        deny all;
        #}

        location ~ \..*/.*\.php$ {
                return 403;
        }


        # No no for private
        #location ~ ^/sites/.*/private/ {
        #        return 403;
        #}
        #location = /sites/storage/files/css/ {
        #        return 403;
        #}

        # Block access to "hidden" files and directories whose names begin with a
        # period. This includes directories used by version control systems such
        # as Subversion or Git to store control files.
        #location ~ (^|/)\. {
        #        return 403;
        #}

	location ~ ^/([0-9Y]+)$ {
		return 301 /profile$request_uri;
	}

        location / {
                # This is cool because no php is touched for static content
                #try_files $uri @rewrite;
                try_files $uri /index.php?$query_string;
        }


        location @rewrite {
                # You have 2 options here
                # For D7 and above:
                # Clean URLs are handled in drupal_environment_initialize().
                rewrite ^ /index.php;
        }

        location ~ \.php$|^/update.php|^/core/authorize.php {
add_header Access-Control-Allow-Origin *;
                fastcgi_split_path_info ^(.+?\.php)(|/.*)$; 
                #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $request_filename;
                fastcgi_intercept_errors on;
                fastcgi_pass unix:/var/run/php-fpm.sock;
        }


location ~* /(?:.+)/files/styles/adaptive/(?:.+)$ {
  if ( $http_cookie ~* "ais=([a-z0-9-_]+)" ) {
    	set $ais_cookie $1;
	rewrite ^/(.+)/files/styles/adaptive/(.+)$ /$1/files/styles/$ais_cookie/$2 last;
  }
  access_log off;
  add_header X-Header "AIS Generator 1.0";
  set $nocache_details "Skip";
  try_files  $uri @rewrite;
}

        # Fighting with Styles? This little gem is amazing.
        # This is for D6
        #location ~ ^/sites/.*/files/imagecache/ {
        # This is for D7 and D8
        location ~ ^/sites/.*/files/styles/ {
                try_files $uri @rewrite;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
                log_not_found off;
        }

